- Type: File
  Path: README.md
  Contents: |
    # COACH DEMO: Monolithic LAMP

    This coach demo provides a monolithic LAMP stack:

    - server service using jamesnesbitt/wunder-lampstackplus

    To incorporate source, the source code from /app/source
    is mapped into a "source" container, which is used in
    the nginx and fpm containers.

    # Getting Started:

      You already did this:

        #/> coach init demo lamp_monolithic

      Now just do this:

        $/> coach up

      This should:

        - download an image

        - start nginx, fpm containers and db in a single container
          using supervisord

    # Day to day use

    ## starting and stopping

        $/> coach stop
        $/> coach start

    ## rebuild the container

      1. stop the running container

        $/> coach stop

      2. remove container

        $/> coach remove

      3. recreate container

        $/> coach create

      4. start the new container

        $/> coach start

- Type: File
  Path: .coach/conf.yml
  Contents: |
    ###
    # Coach project conf
    #
    # Configurations for the coach project
    #
    # Project: project name, used to create container names
    # Author: used for docker commits & pushes.
    #   @note this needs to be valid for container names/images
    #     so it can contain alpha-numeric & "_"
    #
    # Tokens: a string map for string substitutions elsewhere
    #    by using the format %{key} in files loaded after this
    #    one
    #
    ###

    # Project name
    Project: lampmono

    Author: me

    # Custom Tokens
    Tokens:
      # Set a container domain, which containers can pull in as ENV or box domains
      CONTAINER_DOMAIN: demo.coach


- Type: File
  Path: .coach/nodes.yml
  Contents: |
    ###
    # Project nodes
    #
    # A string map of node configurations, each entry is a node, which 
    # corresponds to a set of containers based on a single image.  the
    # nodes have different types, an different purposes:
    #
    ###

    ###
    # A Single monolithic LAMP image
    #
    # This single image contains a complete running LAMP stack:
    #   - nginx
    #   - phpfpm56 from REMI
    #   - mariadb from the mariadb centos repo
    #
    # The image is managed using supervisord
    #
    # @NOTE optionally use DNSDOCK to get automatic DNS out of it, or 
    #   enable the PortBindings to get local ports as needed
    #
    ###
    lampstack:
      Type: service

      Docker:
        Config:
          Image: jamesnesbitt/wunder-lampstackplus # RUn from a monolithic image
          Hostname: "%PROJECT" # Token derived from the project name in conf.yml
          Domainname: "%CONTAINER_DOMAIN" # A token explicityl defined in conf,yml
          Env:
            - "DNSDOCK_ALIAS=%PROJECT.%CONTAINER_DOMAIN" # an optional ENV var to set, that works with DNSDOCK if you are using it.
          ExposedPorts:
            80/tcp: {}

        Host:
          Binds:
            - "app/source:/app/www" # map the local source folder, into where the nginx/fpm expect the web root
          PortBindings:
            80/tcp:
              - HostPort: 8080 # Port 8080 applies to all Host IPs


- Type: File
  Path: app/README.md
  Contents: |
    # DEMO lamp

    ## /app/source

      Project source-code and assets path

- Type: File
  Path: app/source/index.php
  Contents: |
    <?php
    /**
     * Put your PHP source code here
     *
     * Not that in this demo project, only this folder gets mapped into
     * the source container, so relative includes that point above will
     * fail.  You can change the source node bind as needed.
     */

    phpinfo();
